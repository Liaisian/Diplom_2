{"name": "Авторизованный пользователь может создать заказ", "status": "failed", "statusDetails": {"message": "AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code", "trace": "self = <tests.test_order.TestOrder object at 0x0000018FBCFBC790>, create_user = ({'email': 'reyhb@yandex.ru', 'name': 'mfxvdnzdhv', 'password': 'ibzvcpnalp'}, <Response [200]>)\ningredients = [{'__v': 0, '_id': '61c0c5a71d1f82001bdaaa6d', 'calories': 643, 'carbohydrates': 85, ...}, {'__v': 0, '_id': '61c0c5a7...arbohydrates': 40, ...}, {'__v': 0, '_id': '61c0c5a71d1f82001bdaaa6e', 'calories': 643, 'carbohydrates': 85, ...}, ...]\n\n    @allure.title('Авторизованный пользователь может создать заказ')\n    @allure.description('Проверка: статус 200, заказ успешно создается.')\n    def test_create_order_with_auth(self, create_user, ingredients):\n        user_data, response_post = create_user\n        token = response_post.json().get('accessToken')\n    \n        order_data = {\n            \"ingredients\": [ingredients[0]['_id'], ingredients[1]['_id']]\n        }\n    \n        response = requests.post(f\"{url.MAIN_URL}/api/orders\", headers={\"Authorization\": f\"Bearer {token}\"}, json=order_data)\n        # print(response.text)\n>       assert response.status_code == 200\nE       assert 403 == 200\nE        +  where 403 = <Response [403]>.status_code\n\ntests\\test_order.py:20: AssertionError"}, "description": "Проверка: статус 200, заказ успешно создается.", "start": 1724955226877, "stop": 1724955227194, "uuid": "4201c986-ebd1-486d-bcb3-f6fd102163c0", "historyId": "b327fbd9239173910bc33c639f650811", "testCaseId": "b327fbd9239173910bc33c639f650811", "fullName": "tests.test_order.TestOrder#test_create_order_with_auth", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order"}, {"name": "subSuite", "value": "TestOrder"}, {"name": "host", "value": "LAPTOP-74V5TFPG"}, {"name": "thread", "value": "8416-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order"}]}